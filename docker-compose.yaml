version: "3"

services:
  reverse-proxy:
    image: traefik:v3.1
    container_name: aielts_traefik
    command:
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # - --entrypoints.web.http.redirections.entryPoint.to=websecure # Редирект HTTP на HTTPS
      # - --entrypoints.websecure.http.tls=true
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - local
      - reverse-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  monitoring-redeployer:
    image: containrrr/watchtower
    container_name: aielts_watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - local
    restart: always

  cache:
    image: redis
    container_name: aielts_redis
    networks:
      - local
    restart: always

  backend:
    build: ./pocketbase
    container_name: aielts_pocketbase
    volumes:
      - pocketbase_data:/pb/pb_data
    networks:
      - local
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`admin.localhost`)"
      - "traefik.http.routers.backend.entrypoints=web"
      # - "traefik.http.services.backend.loadbalancer.server.port=8090"

  web:
    build: ./sveltekit
    container_name: aielts_sveltekit
    networks:
      - local
    env_file: "sveltekit/.env"
    restart: always
    depends_on:
      - backend
      - cache
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`localhost`)"
      - "traefik.http.routers.web.entrypoints=web"
      # - "traefik.http.services.web.loadbalancer.server.port=3000"

volumes:
  pocketbase_data:

networks:
  local:
    driver: bridge
  reverse-proxy:
    external: true
